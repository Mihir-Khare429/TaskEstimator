# -*- coding: utf-8 -*-
"""TaskTimeEstimator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DHwL1Y82-Ez2uXV1JlK6TkyOeslDQ22R

# Task Time **Estimatior**

Importing the required liabraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""Importing the dataset"""

dataset = pd.read_csv('SprintData.csv')
X = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

print(X)

print(y)

"""Splitting the dataset into Training and Testing set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.15, random_state = 0)

"""Training the multiple linear regression model on the training set"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""Predicting the test set results"""

y_pred = regressor.predict(X_test)
np.set_printoptions(precision = 2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

from sklearn import metrics
from sklearn.metrics import mean_squared_error, mean_absolute_error

mae = metrics.mean_absolute_error(y_test, y_pred)
mse = metrics.mean_squared_error(y_test, y_pred)
r2 = np.sqrt(metrics.mean_squared_error(y_test, y_pred))

print('Mean Absolute Error:', mae)
print('Mean Square Error:', mse)
print('Root Mean Square Error:', r2)

from sklearn.metrics import r2_score

r_squared = r2_score(y_test, y_pred)
print(f'R-squared Score: {r_squared}')

print(regressor.coef_)
print(regressor.intercept_)